x_0_0, x_0_1, x_0_2, x_0_3, x_0_4, x_0_5, x_0_6, x_0_7, x_0_8, x_0_9, x_0_10, x_0_11, x_0_12, x_0_13, x_0_14, x_0_15, x_1_0, x_1_1, x_1_2, x_1_3, x_1_4, x_1_5, x_1_6, x_1_7, x_1_8, x_1_9, x_1_10, x_1_11, x_1_12, x_1_13, x_1_14, x_1_15, x_2_0, x_2_1, x_2_2, x_2_3, x_2_4, x_2_5, x_2_6, x_2_7, x_2_8, x_2_9, x_2_10, x_2_11, x_2_12, x_2_13, x_2_14, x_2_15, x_3_0, x_3_1, x_3_2, x_3_3, x_3_4, x_3_5, x_3_6, x_3_7, x_3_8, x_3_9, x_3_10, x_3_11, x_3_12, x_3_13, x_3_14, x_3_15, y_0, y_1, y_2, y_3, y_4, y_5, y_6, y_7, y_8, y_9, y_10, y_11, y_12, y_13, y_14, y_15 : BITVECTOR(1);
q_0, q_1, q_2, q_3, q_4, q_5, q_6, q_7, q_8, q_9, q_10, q_11, q_12, q_13, q_14, q_15 : BITVECTOR(1);
a_0, a_1, a_2, a_3 : BITVECTOR(1);
ASSERT(x_0_0=0bin1);
ASSERT(x_0_1=0bin0);
ASSERT(x_0_2=0bin0);
ASSERT(x_0_3=0bin0);
ASSERT(x_0_4=0bin1);
ASSERT(x_0_5=0bin1);
ASSERT(x_0_6=0bin0);
ASSERT(x_0_7=0bin0);
ASSERT(x_0_8=0bin1);
ASSERT(x_0_9=0bin1);
ASSERT(x_0_10=0bin0);
ASSERT(x_0_11=0bin1);
ASSERT(x_0_12=0bin1);
ASSERT(x_0_13=0bin1);
ASSERT(x_0_14=0bin1);
ASSERT(x_0_15=0bin1);
ASSERT(x_1_0=0bin0);
ASSERT(x_1_1=0bin1);
ASSERT(x_1_2=0bin0);
ASSERT(x_1_3=0bin0);
ASSERT(x_1_4=0bin1);
ASSERT(x_1_5=0bin1);
ASSERT(x_1_6=0bin1);
ASSERT(x_1_7=0bin0);
ASSERT(x_1_8=0bin1);
ASSERT(x_1_9=0bin1);
ASSERT(x_1_10=0bin1);
ASSERT(x_1_11=0bin1);
ASSERT(x_1_12=0bin1);
ASSERT(x_1_13=0bin1);
ASSERT(x_1_14=0bin0);
ASSERT(x_1_15=0bin0);
ASSERT(x_2_0=0bin0);
ASSERT(x_2_1=0bin0);
ASSERT(x_2_2=0bin0);
ASSERT(x_2_3=0bin1);
ASSERT(x_2_4=0bin1);
ASSERT(x_2_5=0bin1);
ASSERT(x_2_6=0bin0);
ASSERT(x_2_7=0bin0);
ASSERT(x_2_8=0bin1);
ASSERT(x_2_9=0bin0);
ASSERT(x_2_10=0bin0);
ASSERT(x_2_11=0bin0);
ASSERT(x_2_12=0bin1);
ASSERT(x_2_13=0bin0);
ASSERT(x_2_14=0bin1);
ASSERT(x_2_15=0bin1);
ASSERT(x_3_0=0bin1);
ASSERT(x_3_1=0bin0);
ASSERT(x_3_2=0bin1);
ASSERT(x_3_3=0bin0);
ASSERT(x_3_4=0bin0);
ASSERT(x_3_5=0bin0);
ASSERT(x_3_6=0bin0);
ASSERT(x_3_7=0bin1);
ASSERT(x_3_8=0bin0);
ASSERT(x_3_9=0bin0);
ASSERT(x_3_10=0bin1);
ASSERT(x_3_11=0bin1);
ASSERT(x_3_12=0bin0);
ASSERT(x_3_13=0bin1);
ASSERT(x_3_14=0bin1);
ASSERT(x_3_15=0bin0);
ASSERT(y_0 = 0bin0);
ASSERT(y_1 = 0bin1);
ASSERT(y_2 = 0bin0);
ASSERT(y_3 = 0bin0);
ASSERT(y_4 = 0bin1);
ASSERT(y_5 = 0bin1);
ASSERT(y_6 = 0bin1);
ASSERT(y_7 = 0bin0);
ASSERT(y_8 = 0bin1);
ASSERT(y_9 = 0bin1);
ASSERT(y_10 = 0bin1);
ASSERT(y_11 = 0bin1);
ASSERT(y_12 = 0bin1);
ASSERT(y_13 = 0bin1);
ASSERT(y_14 = 0bin0);
ASSERT(y_15 = 0bin0);
ASSERT( a_0 & a_1 = 0bin0 );
ASSERT( a_0 & a_2 = 0bin0 );
ASSERT( a_0 & a_3 = 0bin0 );
ASSERT( a_1 & a_2 = 0bin0 );
ASSERT( a_1 & a_3 = 0bin0 );
ASSERT( a_2 & a_3 = 0bin0 );
ASSERT(q_0 = BVXOR( a_0 & x_0_0, BVXOR( a_1 & x_1_0, BVXOR( a_2 & x_2_0, a_3 & x_3_0 ) ) ) );
ASSERT(q_1 = BVXOR( a_0 & x_0_1, BVXOR( a_1 & x_1_1, BVXOR( a_2 & x_2_1, a_3 & x_3_1 ) ) ) );
ASSERT(q_2 = BVXOR( a_0 & x_0_2, BVXOR( a_1 & x_1_2, BVXOR( a_2 & x_2_2, a_3 & x_3_2 ) ) ) );
ASSERT(q_3 = BVXOR( a_0 & x_0_3, BVXOR( a_1 & x_1_3, BVXOR( a_2 & x_2_3, a_3 & x_3_3 ) ) ) );
ASSERT(q_4 = BVXOR( a_0 & x_0_4, BVXOR( a_1 & x_1_4, BVXOR( a_2 & x_2_4, a_3 & x_3_4 ) ) ) );
ASSERT(q_5 = BVXOR( a_0 & x_0_5, BVXOR( a_1 & x_1_5, BVXOR( a_2 & x_2_5, a_3 & x_3_5 ) ) ) );
ASSERT(q_6 = BVXOR( a_0 & x_0_6, BVXOR( a_1 & x_1_6, BVXOR( a_2 & x_2_6, a_3 & x_3_6 ) ) ) );
ASSERT(q_7 = BVXOR( a_0 & x_0_7, BVXOR( a_1 & x_1_7, BVXOR( a_2 & x_2_7, a_3 & x_3_7 ) ) ) );
ASSERT(q_8 = BVXOR( a_0 & x_0_8, BVXOR( a_1 & x_1_8, BVXOR( a_2 & x_2_8, a_3 & x_3_8 ) ) ) );
ASSERT(q_9 = BVXOR( a_0 & x_0_9, BVXOR( a_1 & x_1_9, BVXOR( a_2 & x_2_9, a_3 & x_3_9 ) ) ) );
ASSERT(q_10 = BVXOR( a_0 & x_0_10, BVXOR( a_1 & x_1_10, BVXOR( a_2 & x_2_10, a_3 & x_3_10 ) ) ) );
ASSERT(q_11 = BVXOR( a_0 & x_0_11, BVXOR( a_1 & x_1_11, BVXOR( a_2 & x_2_11, a_3 & x_3_11 ) ) ) );
ASSERT(q_12 = BVXOR( a_0 & x_0_12, BVXOR( a_1 & x_1_12, BVXOR( a_2 & x_2_12, a_3 & x_3_12 ) ) ) );
ASSERT(q_13 = BVXOR( a_0 & x_0_13, BVXOR( a_1 & x_1_13, BVXOR( a_2 & x_2_13, a_3 & x_3_13 ) ) ) );
ASSERT(q_14 = BVXOR( a_0 & x_0_14, BVXOR( a_1 & x_1_14, BVXOR( a_2 & x_2_14, a_3 & x_3_14 ) ) ) );
ASSERT(q_15 = BVXOR( a_0 & x_0_15, BVXOR( a_1 & x_1_15, BVXOR( a_2 & x_2_15, a_3 & x_3_15 ) ) ) );
ASSERT(  y_0 = q_0 ); 
ASSERT(  y_1 = q_1 ); 
ASSERT(  y_2 = q_2 ); 
ASSERT(  y_3 = q_3 ); 
ASSERT(  y_4 = q_4 ); 
ASSERT(  y_5 = q_5 ); 
ASSERT(  y_6 = q_6 ); 
ASSERT(  y_7 = q_7 ); 
ASSERT(  y_8 = q_8 ); 
ASSERT(  y_9 = q_9 ); 
ASSERT(  y_10 = q_10 ); 
ASSERT(  y_11 = q_11 ); 
ASSERT(  y_12 = q_12 ); 
ASSERT(  y_13 = q_13 ); 
ASSERT(  y_14 = q_14 ); 
ASSERT(  y_15 = q_15 ); 
QUERY(FALSE);
COUNTEREXAMPLE;
